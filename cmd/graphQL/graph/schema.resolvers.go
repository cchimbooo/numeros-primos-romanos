package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.21 DO NOT EDIT.

import (
	"context"
	"errors"
	"prova-programacao/pkg/core/menorPrimoRomano"
)

// Search is the resolver for the search field.
func (r *mutationResolver) Search(ctx context.Context, text string) (*menorPrimoRomano.MenorNumero, error) {
	retorno := r.Romano.ProcessarString(text)
	return &retorno, nil
}

// Number is the resolver for the number field.
func (r *responseResolver) Number(ctx context.Context, obj *menorPrimoRomano.MenorNumero) (string, error) {
	if obj != nil {
		return obj.Romano, nil
	}
	return "", errors.New("Menor Numero nil")
}

// Value is the resolver for the value field.
func (r *responseResolver) Value(ctx context.Context, obj *menorPrimoRomano.MenorNumero) (int, error) {
	if obj != nil {
		return obj.Decimal, nil
	}
	return 0, errors.New("Menor Numero nil")
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Response returns ResponseResolver implementation.
func (r *Resolver) Response() ResponseResolver { return &responseResolver{r} }

type mutationResolver struct{ *Resolver }
type responseResolver struct{ *Resolver }

// !!! WARNING !!!
// The code below was going to be deleted when updating resolvers. It has been copied here so you have
// one last chance to move it out of harms way if you want. There are two reasons this happens:
//   - When renaming or deleting a resolver the old code will be put in here. You can safely delete
//     it when you're done.
//   - You have helper methods in this file. Move them out to keep these resolver files clean.
type queryResolver struct{ *Resolver }
